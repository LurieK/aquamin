/**
 * Grid shared block styling
 *
 * This file gets shared between the
 * theme and editor.
 */
.grd {
	/* prettier-ignore */
	--grd-w: calc((100%/var(--grd-count))-((var(--grd-gap-left, 0px)*(var(--grd-count)- 1))/var(--grd-count)));
	display: grid;
	grid-template-columns: repeat(var(--grd-count), var(--grd-w));
	grid-gap: var(--grd-gap-left, 0px);
	@media (max-width: 479px) {
		--grd-count: var(--grd-count-sm);
	}
	@media (min-width: 480px) and (max-width: 781px) {
		--grd-count: var(--grd-count-md);
	}
	@media (min-width: 782px) {
		--grd-count: var(--grd-count-lg);
	}
}
.grd--has-aspect {
	grid-auto-rows: 1fr;
	/* DEBUG */
	/* @supports selector(:has(*)) {
		
	} */
	& .grd__item {
		display: grid;
		&::before {
			/* prettier-ignore */
			--grd-w-aspect: calc(100%/var(--grd-span, 1)-(var(--grd-gap-left, 0px)/var(--grd-span,1)*(var(--grd-span,1)- 1)));
			content: "";
			width: var(--grd-w-aspect);
			aspect-ratio: var(--grd-aspect);
		}
	}
	& .grd__item::before,
	& .grd__frame {
		grid-column: 1;
		grid-row: 1;
	}
}
.grd--stretch-media {
	& figure,
	& video,
	& img {
		position: absolute;
		display: block;
		max-width: none;
		margin: 0;
		object-fit: cover;
		/* override any inline height/width */
		width: 100% !important;
		height: 100% !important;
	}
}
.grd__item {
	position: relative;
	display: grid;
	min-width: 0;
	min-width: 2em;
	grid-column: var(--grd-col, auto) / span var(--grd-span, 1);
	grid-row: var(--grd-row, auto);
	@media (max-width: 479px) {
		--grd-span: var(--grd-span-sm, 1);
	}
	@media (min-width: 480px) and (max-width: 781px) {
		--grd-span: var(--grd-span-md, 1);
	}
	@media (min-width: 782px) {
		--grd-span: var(--grd-span-lg, 1);
	}
}
