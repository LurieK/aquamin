/**
 * Mixins
 *
 * Table of Contents:
 * Map Deep Get
 * Clearfix
 * Placeholders
 * Strip Unit
 * Unit px to em
 * Media Queries
 * Nav
 * Buttons
 */

/**
 * Map Deep Get
 */
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

/**
 * Clearfix
 */
@mixin clearfix {
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

/**
 * Placeholders
 */
// Autoprefixer seems to have issues, even if these are just comma separated.
// make edits in normal _forms.scss file.
@mixin placeholder-prefixes {
    &::-webkit-input-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
}
@mixin placeholder-prefixes-focus {
    &:focus::-webkit-input-placeholder {
        @content;
    }
    &:focus::-moz-placeholder {
        @content;
    }
    &:focus:-ms-input-placeholder {
        @content;
    }
    &:focus:-moz-placeholder {
        @content;
    }
}

/**
 * Strip Unit
 */
//Usage:
// p {
//   line-height: strip-unit(16px); // compiles to line-height: 16;
// }
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

/**
 * Unit px to em
 */
//Usage:
// converts a pixel value to an em value
// p {
//     width: em(16px); // compiles to 1em
// }
//
// or for non-standard base font size:
// p {
//     padding: em(16px,8px); // compiles to 2em
// }
@function em($value, $base: $font-size) {
    $value: strip-unit($value) / strip-unit($base) * 1em;
    @return $value;
}

/**
 * Media Queries
 */
//Usage:
// @include bp($max: 600px){ body { background:#000 } }
// @include bp($min: 600px){ body { background:#fff } }
// @include bp($min: 600px, $max: 600px){ body { background:#000 } }
// @include bp($planetary){ body { background:#fff } }

@mixin bp($media: false, $min: false, $max: false) {
    @if $media {
        @media only screen and (max-width: $media) { @content; }
    }
    @else if $min and $max {
        @media only screen and (min-width: $min) and (max-width: $max) { @content; }
    }
    @else if $min {
        @media only screen and (min-width: $min) { @content; }
    }
    @else if $max {
        @media only screen and (max-width: $max) { @content; }
    }

}

/**
 * Navigation
 */

// Use this mixin to add basic nav styling.
// Just add the following code within your styles:
//
//
//      @include nav(
//          $type: 'nested',            //nav type: dropdown or nested
//          $nav-container: '.nav',     //& by default
//          $fade: .3s,                 //fade speed for dropdown (take out for no animation)
//          $easy-hover: 50px,          //amount of invisible overflow for dropdown (take out to not use)
//          $easy-hover-top: 0          //set top easy-hover value (you can also set $easy-hover-right, -bottom, and -left separately)
//      );
//
// or to just use the defaults inside any parent element, simply
//
//      .nav {
//          @include nav();
//      }

@mixin nav(
    $type: 'nested',
    $nav-container: '&',
    $fade: false,
    $easy-hover: false,
    $easy-hover-top: false,
    $easy-hover-right: false,
    $easy-hover-bottom: false,
    $easy-hover-left: false
){
    @if $type == dropdown {
        #{$nav-container} {
            position: relative;
            z-index: 10;
            ul {
                li {
                    display: block;
                    float: left;
                    list-style: none;
                }
                ul {
                    visibility: hidden;
                    padding: 0;
                    @if $fade {
                        transition-property: #{opacity, visibility, background-color};
                        transition-duration: #{$fade, 0s};
                        transition-delay: #{0s, $fade};
                    }
                    @if $easy-hover {
                        &:after {
                            content: "";
                            position: absolute;
                            @if $easy-hover-top {
                                top: -1 * $easy-hover-top;
                            } @else {
                                top: -1 * $easy-hover;
                            }
                            @if $easy-hover-bottom {
                                bottom:  -1 * $easy-hover-bottom;
                            } @else {
                                bottom:  -1 * $easy-hover;
                            }
                            @if $easy-hover-left {
                                left:  -1 * $easy-hover-left;
                            } @else {
                                left:  -1 * $easy-hover;
                            }
                            @if $easy-hover-right {
                                right:  -1 * $easy-hover-right;
                            } @else {
                                right:  -1 * $easy-hover;
                            }
                            background-color: #000;
                            opacity: 0;
                            z-index: -1;
                        }
                    }
                }
            }
            //local nav
            li {
                ul {
                    display: block;
                    position: absolute;
                    opacity: 0;
                }
                &:hover {
                    ul {
                        opacity: 1;
                        visibility: visible;
                        @if $fade {
                            transition-delay: 0s, 0s;
                        }
                    }
                }
            }
        }
    }
    @if $type == 'nested' {
        #{$nav-container} {
            li {
                float: left;
                list-style: none;
                ul {
                    padding: 0;
                }
                li {
                    clear: both;
                }
                a {
                    display: block;
                }
            }
            //global nav
            ul {
                //local nav
                ul {
                    padding:0;
                    li {
                        float: left;
                        clear: both;
                    }
                }
            }
        }
    }
}
